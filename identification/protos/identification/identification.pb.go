// Code generated by protoc-gen-go. DO NOT EDIT.
// source: identification.proto

/*
Package identification is a generated protocol buffer package.

It is generated from these files:
	identification.proto

It has these top-level messages:
	GetRequest
	Identity
*/
package identification

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Identity_Type int32

const (
	Identity_ADMIN    Identity_Type = 0
	Identity_CUSTOMER Identity_Type = 1
	Identity_GUEST    Identity_Type = 2
)

var Identity_Type_name = map[int32]string{
	0: "ADMIN",
	1: "CUSTOMER",
	2: "GUEST",
}
var Identity_Type_value = map[string]int32{
	"ADMIN":    0,
	"CUSTOMER": 1,
	"GUEST":    2,
}

func (x Identity_Type) String() string {
	return proto.EnumName(Identity_Type_name, int32(x))
}
func (Identity_Type) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 0} }

type GetRequest struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *GetRequest) Reset()                    { *m = GetRequest{} }
func (m *GetRequest) String() string            { return proto.CompactTextString(m) }
func (*GetRequest) ProtoMessage()               {}
func (*GetRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *GetRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type Identity struct {
	Guid     string `protobuf:"bytes,1,opt,name=guid" json:"guid,omitempty"`
	Name     string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Email    string `protobuf:"bytes,3,opt,name=email" json:"email,omitempty"`
	Password string `protobuf:"bytes,4,opt,name=password" json:"password,omitempty"`
}

func (m *Identity) Reset()                    { *m = Identity{} }
func (m *Identity) String() string            { return proto.CompactTextString(m) }
func (*Identity) ProtoMessage()               {}
func (*Identity) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Identity) GetGuid() string {
	if m != nil {
		return m.Guid
	}
	return ""
}

func (m *Identity) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Identity) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *Identity) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func init() {
	proto.RegisterType((*GetRequest)(nil), "identification.GetRequest")
	proto.RegisterType((*Identity)(nil), "identification.Identity")
	proto.RegisterEnum("identification.Identity_Type", Identity_Type_name, Identity_Type_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for IdentificationService service

type IdentificationServiceClient interface {
	Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*Identity, error)
	Create(ctx context.Context, in *Identity, opts ...grpc.CallOption) (*Identity, error)
}

type identificationServiceClient struct {
	cc *grpc.ClientConn
}

func NewIdentificationServiceClient(cc *grpc.ClientConn) IdentificationServiceClient {
	return &identificationServiceClient{cc}
}

func (c *identificationServiceClient) Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*Identity, error) {
	out := new(Identity)
	err := grpc.Invoke(ctx, "/identification.IdentificationService/Get", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *identificationServiceClient) Create(ctx context.Context, in *Identity, opts ...grpc.CallOption) (*Identity, error) {
	out := new(Identity)
	err := grpc.Invoke(ctx, "/identification.IdentificationService/Create", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for IdentificationService service

type IdentificationServiceServer interface {
	Get(context.Context, *GetRequest) (*Identity, error)
	Create(context.Context, *Identity) (*Identity, error)
}

func RegisterIdentificationServiceServer(s *grpc.Server, srv IdentificationServiceServer) {
	s.RegisterService(&_IdentificationService_serviceDesc, srv)
}

func _IdentificationService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IdentificationServiceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/identification.IdentificationService/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IdentificationServiceServer).Get(ctx, req.(*GetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IdentificationService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Identity)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IdentificationServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/identification.IdentificationService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IdentificationServiceServer).Create(ctx, req.(*Identity))
	}
	return interceptor(ctx, in, info, handler)
}

var _IdentificationService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "identification.IdentificationService",
	HandlerType: (*IdentificationServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Get",
			Handler:    _IdentificationService_Get_Handler,
		},
		{
			MethodName: "Create",
			Handler:    _IdentificationService_Create_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "identification.proto",
}

func init() { proto.RegisterFile("identification.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 244 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x90, 0xc1, 0x4a, 0xc3, 0x40,
	0x10, 0x40, 0xbb, 0x69, 0x5a, 0xd2, 0x41, 0x4a, 0x18, 0x2a, 0x2c, 0xc1, 0x83, 0xe4, 0x24, 0x1e,
	0x7a, 0xd0, 0xb3, 0x82, 0xd4, 0x12, 0x72, 0xa8, 0x42, 0x92, 0x7e, 0xc0, 0xda, 0x8c, 0x32, 0x60,
	0x93, 0xb8, 0x99, 0x2a, 0xfd, 0x0b, 0x4f, 0x7e, 0xaf, 0x64, 0x8b, 0x95, 0x16, 0xf4, 0x36, 0xf3,
	0xde, 0xce, 0xe1, 0x2d, 0x4c, 0xb8, 0xa4, 0x4a, 0xf8, 0x99, 0x57, 0x46, 0xb8, 0xae, 0xa6, 0x8d,
	0xad, 0xa5, 0xc6, 0xf1, 0x21, 0x8d, 0xcf, 0x00, 0x12, 0x92, 0x8c, 0xde, 0x36, 0xd4, 0x0a, 0x8e,
	0xc1, 0xe3, 0x52, 0xab, 0x73, 0x75, 0x31, 0xca, 0x3c, 0x2e, 0xe3, 0x4f, 0x05, 0x41, 0xea, 0x0e,
	0x64, 0x8b, 0x08, 0xfe, 0xcb, 0x66, 0xaf, 0xdd, 0xdc, 0xb1, 0xca, 0xac, 0x49, 0x7b, 0x3b, 0xd6,
	0xcd, 0x38, 0x81, 0x01, 0xad, 0x0d, 0xbf, 0xea, 0xbe, 0x83, 0xbb, 0x05, 0x23, 0x08, 0x1a, 0xd3,
	0xb6, 0x1f, 0xb5, 0x2d, 0xb5, 0xef, 0xc4, 0x7e, 0x8f, 0x2f, 0xc1, 0x2f, 0xb6, 0x0d, 0xe1, 0x08,
	0x06, 0x77, 0xf7, 0x8b, 0xf4, 0x21, 0xec, 0xe1, 0x09, 0x04, 0xb3, 0x65, 0x5e, 0x3c, 0x2e, 0xe6,
	0x59, 0xa8, 0x3a, 0x91, 0x2c, 0xe7, 0x79, 0x11, 0x7a, 0x57, 0x5f, 0x0a, 0x4e, 0xd3, 0x83, 0x86,
	0x9c, 0xec, 0x3b, 0xaf, 0x08, 0x6f, 0xa0, 0x9f, 0x90, 0x60, 0x34, 0x3d, 0x0a, 0xff, 0xed, 0x8b,
	0xf4, 0xb1, 0xfb, 0x89, 0x8b, 0x7b, 0x78, 0x0b, 0xc3, 0x99, 0x25, 0x23, 0x84, 0x7f, 0xbe, 0xfa,
	0xef, 0xfe, 0x69, 0xe8, 0x3e, 0xf8, 0xfa, 0x3b, 0x00, 0x00, 0xff, 0xff, 0x5c, 0x75, 0x30, 0xf4,
	0x78, 0x01, 0x00, 0x00,
}
